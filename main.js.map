{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/phaser-scene.ts","./src/app/components/control-panel/control-panel.component.ts","./src/app/components/control-panel/control-panel.component.html","./src/app/components/display/display.component.ts","./src/app/components/display/display.component.html","./src/app/config/phaser-config.config.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ControlPanelComponent } from './components/control-panel/control-panel.component';\nimport { DisplayComponent } from './components/display/display.component';\n\nconst routes: Routes = [\n  {\n    path: 'display',\n    component: DisplayComponent,\n  },\n  {\n    path: '',\n    component: ControlPanelComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'auto-resolver';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ControlPanelComponent } from './components/control-panel/control-panel.component';\nimport { DisplayComponent } from './components/display/display.component';\nimport { NgChartsModule } from 'ng2-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ControlPanelComponent,\n    DisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Tweens } from 'phaser';\r\nimport { phaserConfig } from '../config/phaser-config.config';\r\n\r\nexport class PhaserScene extends Phaser.Scene {\r\n  private worldMap?: Phaser.GameObjects.Image;\r\n  private flashTween?: Tweens.Tween;\r\n\r\n  constructor() {\r\n    super({ key: 'main' });\r\n  }\r\n\r\n  preload() {\r\n    this.load.image('worldmap', 'assets/world-map.jpg');\r\n  }\r\n\r\n  create() {\r\n    const midX = phaserConfig.scale.width / 2;\r\n    const midY = phaserConfig.scale.height / 2;\r\n    this.worldMap = this.add.image(midX, midY, 'worldmap');\r\n\r\n    // this.addShine();\r\n    this.flashMap();\r\n\r\n    this.add\r\n      .text(midX, midY, 'Scanning...')\r\n      .setFontFamily('Orbitron')\r\n      .setFontSize(64)\r\n      .setColor('#ffff00')\r\n      .setAlign('Center');\r\n  }\r\n\r\n  override update() {\r\n    // tween\r\n    // if (this.tintValue < 0xff0000 || this.tintValue > 0xffeeee) {\r\n    //   this.tintDirection = -this.tintDirection;\r\n    // }\r\n    // this.tintValue += this.tintDirection;\r\n    // console.log(this.tintValue, this.tintDirection);\r\n    // this.worldMap?.setTint(this.tintValue);\r\n  }\r\n\r\n  private addShine(): void {\r\n    this.worldMap?.postFX.addShine(0.5, 0.2, 15);\r\n  }\r\n\r\n  private removeShine(): void {\r\n    this.worldMap?.clearFX();\r\n  }\r\n\r\n  private flashMap(): void { \r\n    this.tweens.addCounter({\r\n      from: parseInt('0xffffff'),\r\n      to: parseInt('0xff0000'),\r\n      duration: 500,\r\n      loop: 4,\r\n      yoyo: true,\r\n      onUpdate: (tween) => {\r\n        const value = Math.floor(tween.getValue());\r\n        this.worldMap?.setTint(value);\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-control-panel',\n  templateUrl: './control-panel.component.html',\n  styleUrls: ['./control-panel.component.scss']\n})\nexport class ControlPanelComponent {\n\n}\n","<p>control-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ChartConfiguration, ChartOptions } from 'chart.js';\nimport Phaser from 'phaser';\nimport { interval } from 'rxjs';\nimport { phaserConfig } from 'src/app/config/phaser-config.config';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss']\n})\nexport class DisplayComponent implements OnInit {\n  public phaserGame?: Phaser.Game;\n  \n  public lineChartData: ChartConfiguration<'line'>['data'] = {\n    labels: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July'\n    ],\n    datasets: [\n      {\n        data: [ 65, 59, 80, 81, 56, 55, 40 ],\n        label: 'Series A',\n        fill: true,\n        tension: 0.5,\n        borderColor: 'black',\n        backgroundColor: 'rgba(255,0,0,0.3)'\n      }\n    ]\n  };\n  public lineChartOptions: ChartOptions<'line'> = {\n    responsive: false\n  };\n  public lineChartLegend = true;\n\n  ngOnInit() {\n    this.phaserGame = new Phaser.Game(phaserConfig);\n    interval(2000).subscribe(() => {\n      const data = this.lineChartData.datasets[0].data;\n      this.lineChartData.datasets[0].data = data.map(() => Math.floor(Math.random() * 100))\n    })\n  }\n\n\n}\n","<div style=\"display: block;\">\n    <canvas baseChart width=\"400\" height=\"400\"\n      [type]=\"'line'\"\n      [data]=\"lineChartData\"\n      [options]=\"lineChartOptions\"\n      [legend]=\"lineChartLegend\">\n    </canvas>\n  </div>\n<div id=\"phaser_container\"></div>\n","import { PhaserScene } from \"../classes/phaser-scene\";\r\n\r\nexport const phaserConfig = {\r\n  type: Phaser.AUTO,\r\n  scene: [PhaserScene],\r\n  scale: {\r\n    parent: 'phaser_container',\r\n    mode: Phaser.Scale.FIT,\r\n    width: 1920,\r\n    height: 800\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","ControlPanelComponent","DisplayComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","NgChartsModule","AppModule","bootstrap","declarations","phaserConfig","PhaserScene","Phaser","Scene","key","preload","load","image","create","midX","scale","width","midY","height","worldMap","add","flashMap","text","setFontFamily","setFontSize","setColor","setAlign","update","addShine","postFX","removeShine","clearFX","tweens","addCounter","from","parseInt","to","duration","loop","yoyo","onUpdate","tween","value","Math","floor","getValue","setTint","ControlPanelComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","interval","lineChartData","labels","datasets","data","label","fill","tension","borderColor","backgroundColor","lineChartOptions","responsive","lineChartLegend","ngOnInit","phaserGame","Game","subscribe","map","random","consts","DisplayComponent_Template","ɵɵadvance","ɵɵproperty","type","AUTO","scene","parent","mode","Scale","FIT","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}